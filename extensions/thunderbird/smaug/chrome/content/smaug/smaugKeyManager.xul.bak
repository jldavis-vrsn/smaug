<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://communicator/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://smaug/skin/smaug.css" type="text/css"?>

<!--
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "MPL"); you may not use this file
 * except in compliance with the MPL. You may obtain a copy of
 * the MPL at http://www.mozilla.org/MPL/
 *
 * Software distributed under the MPL is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the MPL for the specific language governing
 * rights and limitations under the MPL.
 *
 * The Original Code is Smaug.
 *
 * The Initial Developer of the Original Code is Patrick Brunschwig.
 * Portions created by Patrick Brunschwig <patrick@smaug.net> are
 * Copyright (C) 2004 Patrick Brunschwig. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 * ***** END LICENSE BLOCK ***** *
-->


<?xul-overlay href="chrome://global/content/globalOverlay.xul"?>
<?xul-overlay href="chrome://communicator/content/utilityOverlay.xul"?>

<!DOCTYPE window [
  <!ENTITY % brandDTD SYSTEM "chrome://global/locale/brand.dtd" >
   %brandDTD;
  <!ENTITY % smgMailDTD SYSTEM "chrome://smaug/locale/smaug.dtd" >
  %smgMailDTD;
  <!ENTITY % utilDTD SYSTEM "chrome://communicator/locale/utilityOverlay.dtd">
   %utilDTD;
]>

<window id="smaugKeyManager"
        title="&smaug.keyMan.title;"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        onload="smaugKeyManagerLoad();"
        height="450"
        width="700"
        windowtype="smaug:KeyManager"
        persist="screenX screenY width height">

  <script type="application/x-javascript" src="chrome://global/content/globalOverlay.js"/>
  <script type="application/x-javascript" src="chrome://smaug/content/smaugCommon.js"/>
  <script type="application/x-javascript" src="chrome://smaug/content/smaugKeyManager.js"/>

  <commandset id="tasksCommands"/>

  <command id="cmd_close" oncommand="window.close()"/>
  <command id="cmd_quit"/>
  <command id="cmd_smaugDeleteKey" oncommand="smaugDeleteKey()"/>

  <keyset id="winKeys">
    <key id="key_selectAll" key="&smaug.keyMan.selectAll.key;"
         oncommand="smaugSelectAllKeys()" modifiers="accel"/>

    <key id="key_keyDetails" key="&smaug.keyMan.keyDetails.key;"
         oncommand="smaugKeyDetails()" modifiers="accel"
         observes="bcOneKey"/>

    <key id="key_refreshKey" key="&smaug.keyMan.refreshKey.key;"
         oncommand="smaugReceiveKey()" modifiers="accel"
         observes="bcNoKey"/>

    <key id="key_viewSig" key="&smaug.keyMan.viewSig.key;"
         oncommand="smaugListSig()" modifiers="accel"
         observes="bcViewSig"/>

    <key id="key_smgDelete"
         keycode="VK_DELETE"
         command="cmd_smaugDeleteKey"/>
    <key id="key_close"/>
    <key id="key_quit"/>
  </keyset>

  <broadcasterset>
    <broadcaster id="bcNoKey" disabled="false"/>
    <broadcaster id="bcSignKey" disabled="false"/>
    <broadcaster id="bcSetTrust" disabled="false"/>
    <broadcaster id="bcViewSig" disabled="false"/>
    <broadcaster id="bcViewPhoto" disabled="false"/>
    <broadcaster id="bcEditKey" disabled="false"/>
    <broadcaster id="bcRevoke" disabled="false"/>
    <broadcaster id="bcOneKey" disabled="false"/>
    <broadcaster id="bcDeleteKey" disabled="false"/>
    <broadcaster id="bcClipbrd" disabled="false"/>
    <broadcaster id="bcEnableKey" disabled="false" label=""/>
  </broadcasterset>

  <menubar id="main-menubar" grippyhidden="true">
    <menu label="&smaug.keyMan.fileMenu.label;"
          id="menu_File"
          accesskey="&smaug.keyMan.fileMenu.accesskey;">
      <menupopup id="menu_FilePopup" onpopupshowing="smaugKeyMenu()">

        <menuitem label="&smaug.keyMan.importFromFile.label;"
          id="importFromFile"
          accesskey="&smaug.keyMan.importFromFile.accesskey;"
          oncommand="smaugImportKeysFromFile()"/>
        <menuitem label="&smaug.keyMan.exportToFile.label;"
          id="exportKey"
          observes="bcNoKey"
          accesskey="&smaug.keyMan.exportToFile.accesskey;"
          oncommand="smaugExportKeys()"/>

        <menuitem label="&smaug.keyMan.sendKeys.label;"
          id="sendKey"
          observes="bcNoKey"
          accesskey="&smaug.keyMan.sendKeys.accesskey;"
          oncommand="smgCreateKeyMsg()"/>

        <menuitem label="&smaug.keyMan.createMail.label;"
          id="createMail"
          observes="bcNoKey"
          accesskey="&smaug.keyMan.createMail.accesskey;"
          oncommand="createNewMail()"/>

        <menuseparator/>

        <menuitem label="&smaug.adminSmartCard.label;"
                id="cardData"
                accesskey="&smaug.adminSmartCard.accesskey;"
                oncommand="EngmailCardDetails()"/>

        <menuseparator/>

        <menuitem label="&smaug.keyMan.reload.label;"
                id="refreshKeys"
                accesskey="&smaug.keyMan.reload.accesskey;"
                oncommand="smaugRefreshKeys();"/>

        <menuseparator/>

        <!-- add Close and Exit menu items -->
        <menuitem id="menu_close"/>
      </menupopup>
    </menu>

    <menu label="&smaug.keyMan.editMenu.label;"
          accesskey="&smaug.keyMan.editMenu.accesskey;">
      <menupopup onpopupshowing="smaugKeyMenu()">

        <menuitem label="&smaug.keyMan.importFromClipbrd.label;"
                  id="importFromClipbrd"
                  observes="bcClipbrd"
                  accesskey="&smaug.keyMan.importFromClipbrd.accesskey;"
                  oncommand="smaugImportFromClipbrd()"/>
        <menuitem label="&smaug.keyMan.copyToClipbrd.label;"
                  id="copyToClipbrd"
                  observes="bcNoKey"
                  accesskey="&smaug.keyMan.copyToClipbrd.accesskey;"
                  oncommand="smaugCopyToClipbrd()"/>

        <menuseparator/>

        <menuitem label="&smaug.keyMan.sign.label;"
                  id="signKey"
                  observes="bcSignKey"
                  accesskey="&smaug.keyMan.sign.accesskey;"
                  oncommand="smgSignKey()"/>
        <menuitem label="&smaug.keyMan.setTrust.label;"
                  id="setTrust"
                  observes="bcNoKey"
                  accesskey="&smaug.keyMan.setTrust.accesskey;"
                  oncommand="smgEditKeyTrust()"/>

        <menuseparator/>

        <menuitem id="enableKey"
          observes="bcEnableKey"
          accesskey="&smaug.keyMan.enableKey.accesskey;"
          oncommand="smaugEnableKey()"/>
        <menuitem label="&smaug.keyMan.revokeKey.label;"
          id="revokeKey"
          observes="bcRevoke"
          accesskey="&smaug.keyMan.revokeKey.accesskey;"
          oncommand="smaugRevokeKey()"/>

        <menuitem label="&smaug.keyMan.delKey.label;"
          id="deleteKey"
          key="key_smgDelete"
          observes="bcNoKey"
          accesskey="&smaug.keyMan.delKey.accesskey;"
          oncommand="smaugDeleteKey()"/>

        <menuseparator/>

        <menuitem id="manageUid"
                  label="&smaug.keyMan.manageUid.label;"
                  observes="bcOneKey"
                  accesskey="&smaug.keyMan.manageUid.accesskey;"
                  oncommand="smaugManageUids()"/>

        <menuitem id="changeExpiry"
                  label="&smaug.keyMan.changeExpiry.label;"
                  observes="bcOneKey"
                  accesskey="&smaug.keyMan.changeExpiry.accesskey;"
                  oncommand="smgEditKeyExpiry()"/>

        <menuitem id="changePwd"
                  label="&smaug.keyMan.changePwd.label;"
                  observes="bcEditKey"
                  accesskey="&smaug.keyMan.changePwd.accesskey;"
                  oncommand="smaugChangePwd()"/>

        <menuitem id="addPhoto"
                  label="&smaug.keyMan.addPhoto.label;"
                  observes="bcRevoke"
                  accesskey="&smaug.keyMan.addPhoto.accesskey;"
                  oncommand="smaugAddPhoto()"/>

        <menuitem id="addToRule"
                  label="&smaug.keyMan.addToPRRule.label;"
                  observes="bcSignKey"
                  oncommand="addToPRRule()"/>

        <menuseparator/>

        <menuitem id="selectAll"
                  label="&smaug.keyMan.selectAll.label;"
                  accesskey="&smaug.keyMan.selectAll.accesskey;"
                  oncommand="smaugSelectAllKeys()"
                  key="key_selectAll"/>

      </menupopup>
    </menu>

      <menu id="viewMenu"
        label="&smaug.keyMan.viewMenu.label;"
        accesskey="&smaug.keyMan.viewMenu.accesskey;">
      <menupopup onpopupshowing="smaugKeyMenu()"> <!-- view menu -->
        <menuitem label="&smaug.keyMan.viewSig.label;"
                  id="viewSig"
                  observes="bcViewSig"
                  key="key_viewSig"
                  accesskey="&smaug.keyMan.viewSig.accesskey;"
                  oncommand="smaugListSig()"/>
        <menuitem label="&smaug.keyMan.viewPhoto.label;"
                  id="viewPhoto"
                  observes="bcViewPhoto"
                  accesskey="&smaug.keyMan.showPhoto.accesskey;"
                  oncommand="smgShowPhoto()"/>
        <menuitem label="&smaug.keyMan.keyProps.label;"
                  id="keyDetails"
                  observes="bcOneKey"
                  accesskey="&smaug.keyMan.keyDetails.accesskey;"
                  key="key_keyDetails"
                  oncommand="smaugKeyDetails()"/>
        <menuseparator/>
        <menuitem label="&smaug.keyMan.showInvalidKeys.label;"
                  id="showInvalidKeys"
                  type="checkbox"
                  checked="true"
                  persist="checked"
                  accesskey="&smaug.keyMan.showInvalidKeys.accesskey;"
                  oncommand="smgApplyFilter()"/>
        <menuitem label="&smaug.keyMan.showUntrustedKeys.label;"
                  id="showUntrustedKeys"
                  type="checkbox"
                  checked="true"
                  persist="checked"
                  accesskey="&smaug.keyMan.showUntrustedKeys.accesskey;"
                  oncommand="smgApplyFilter()"/>
        <menuitem label="&smaug.keyMan.showOthersKeys.label;"
                  id="showOthersKeys"
                  type="checkbox"
                  checked="true"
                  persist="checked"
                  accesskey="&smaug.keyMan.showOthersKeys.accesskey;"
                  oncommand="smgApplyFilter()"/>

      </menupopup>
    </menu>

    <menu id="keyserverMenu"
          label="&smaug.keyMan.keyserverMenu.label;"
          accesskey="&smaug.keyMan.keyserverMenu.accesskey;">
      <menupopup onpopupshowing="smaugKeyMenu()"> <!-- keyserverMenu menu -->

        <menuitem label="&smaug.keyMan.refreshSelKeys.label;"
                  id="refreshKey"
                  observes="bcNoKey"
                  accesskey="&smaug.keyMan.refreshSelKeys.accesskey;"
                  key="key_refreshKey"
                  oncommand="smaugReceiveKey()"/>
        <menuitem label="&smaug.keyMan.importFromServer.label;"
                  id="importFromServer"
                  accesskey="&smaug.keyMan.importFromServer.accesskey;"
                  oncommand="smaugSearchKey()"/>
        <menuitem label="&smaug.keyMan.uploadToServer.label;"
                  id="uploadToServer"
                  observes="bcNoKey"
                  accesskey="&smaug.keyMan.uploadToServer.accesskey;"
                  oncommand="smaugUploadKeys()"/>
        <menuseparator/>
        <menuitem label="&smaug.keyMan.refreshAllKeys.label;"
                  id="refreshAllKeys"
                  accesskey="&smaug.keyMan.refreshAllKeys.accesskey;"
                  oncommand="smaugRefreshAllKeys()"/>
        <menuitem label="&smaug.keyMan.downloadContactKeys.label;"
                  accesskey="&smaug.keyMan.downloadContactKeys.accesskey;"
                  id="downloadContactKeys"
                  oncommand="smaugDownloadContactKeys()"/>
      </menupopup>
    </menu>

    <menu id="generateMenu"
          label="&smaug.keyMan.generateMenu.label;"
          accesskey="&smaug.keyMan.generateMenu.accesskey;">
      <menupopup onpopupshowing="smaugKeyMenu()"> <!-- generate menu -->
        <menuitem label="&smaug.keyMan.generate.label;"
                  id="genKey"
                  accesskey="&smaug.keyMan.generate.accesskey;"
                  oncommand="SmgKeygen(); smaugRefreshKeys();"/>
        <menuitem label="&smaug.keyMan.genRevoke.label;"
                  id="revokationCertificate"
                  observes="bcRevoke"
                  accesskey="&smaug.keyMan.genRevoke.accesskey;"
                  oncommand="smgCreateRevokeCert()"/>
      </menupopup>
    </menu>

  </menubar>

  <popupset>
    <menupopup id="ctxmenu"
           onpopupshowing="smaugKeyMenu();">
      <menuitem label="&smaug.keyMan.ctxCopyToClipbrd.label;"
                id="ctxCopyToClipbrd"
                oncommand="smaugCopyToClipbrd()"/>
      <menuitem label="&smaug.keyMan.ctxExportToFile.label;"
                id="ctxExport"
                oncommand="smaugExportKeys()"/>
      <menuitem label="&smaug.keyMan.sendKeys.label;"
                id="ctxSendKey"
                oncommand="smgCreateKeyMsg()"/>

      <menuseparator/>

      <menuitem label="&smaug.keyMan.ctxUploadToServer.label;"
                id="ctxUpload"
                oncommand="smaugUploadKeys()"/>
      <menuitem label="&smaug.keyMan.ctxRefreshKey.label;"
                id="ctxRefreshKey"
                oncommand="smaugReceiveKey()"/>

      <menuseparator/>

      <menuitem id="ctxSign" observes="bcSignKey" label="&smaug.keyMan.sign.label;" oncommand="smgSignKey()"/>
      <menuitem id="ctxTrust" label="&smaug.keyMan.setTrust.label;" oncommand="smgEditKeyTrust()"/>
      <menuitem id="ctxAddToRule" observes="bcSignKey" label="&smaug.keyMan.addToPRRule.label;" oncommand="addToPRRule()"/>

      <menuseparator/>


      <menuitem id="ctxEnableKey" observes="bcEnableKey" oncommand="smaugEnableKey()"/>
      <menuitem id="ctxRevokeKey" observes="bcRevoke" label="&smaug.keyMan.revokeKey.label;" oncommand="smaugRevokeKey()"/>
      <menuitem id="ctxDeleteKey" label="&smaug.keyMan.delKey.label;" oncommand="smaugDeleteKey()"/>

      <menuseparator/>

      <menuitem id="ctxManageUid" observes="bcOneKey" label="&smaug.keyMan.manageUid.label;" oncommand="smaugManageUids()"/>
      <menuitem id="ctxChangeExpiry" observes="bcEditKey" label="&smaug.keyMan.changeExpiry.label;" oncommand="smgEditKeyExpiry()"/>
      <menuitem id="ctxChangePwd" observes="bcEditKey" label="&smaug.keyMan.changePwd.label;" oncommand="smaugChangePwd()"/>
      <menuitem id="ctxRevokationCert" observes="bcRevoke" label="&smaug.keyMan.ctxGenRevoke.label;" oncommand="smgCreateRevokeCert()"/>
      <menuitem id="ctxAddPhoto" observes="bcRevoke" label="&smaug.keyMan.addPhoto.label;" oncommand="smaugAddPhoto()"/>

      <menuseparator/>

      <menuitem id="ctxViewSig" observes="bcViewSig" label="&smaug.keyMan.ctxViewSig.label;" oncommand="smaugListSig()"/>
      <menuitem id="ctxViewPhoto" observes="bcViewPhoto" label="&smaug.keyMan.ctxViewPhoto.label;" oncommand="smgShowPhoto()"/>
      <menuitem id="ctxDetails" observes="bcViewSig" label="&smaug.keyMan.keyProps.label;"
                oncommand="smaugKeyDetails()"/>
    </menupopup>
  </popupset>

  <hbox flex="0" align="center">
    <label value="&smaug.keyMan.filter.label;" control="filterKey"/>
    <textbox id="filterKey" size="30"
             type="search"
             timeout="500"
             oncommand="onSearchInput();"/>
    <separator orient="vertical"/>
    <checkbox label="&smaug.keyMan.showAllKeys.label;"
          checked="true"
          id="showAllKeys"
          accesskey="&smaug.keyMan.showAllKeys.accesskey;"
          oncommand="smaugToggleShowAll(this)"/>

  </hbox>

  <tooltip id="emptyTree" label="&smaug.keyMan.emptyTree.tooltip;" noautohide="true"/>
  <tooltip id="nothingFound" label="&smaug.keyMan.nothingFound.tooltip;" noautohide="true"/>
  <tooltip id="pleaseWait" label="&smaug.keyMan.pleaseWait.tooltip;" noautohide="true"/>

  <groupbox width="700px" flex="1">
    <hbox flex="1">
      <tree id="pgpKeyList" flex="1"
        enableColumnDrag="true"
        seltype="multiple"
        persist="sortDirection sortResource"
        sortDirection="ascending"
        sortResource="smgUserNameCol"
        hidecolumnpicker="false">

        <treecols>
          <treecol id="smgUserNameCol" primary="true"
                  flex="1"
                  class="sortDirectionIndicator"
                  onclick="sortTree(this)"
                  label="&smaug.keyMan.userId.label;"
                  persist="width ordinal hidden"/>
          <splitter class="tree-splitter"/>
          <treecol id="keyCol" style="width:90px"
                   label="&smaug.keyId.label;"
                   flex="0"
                   class="sortDirectionIndicator"
                   onclick="sortTree(this)"
                   persist="width ordinal hidden"/>
          <splitter class="tree-splitter"/>
          <treecol id="typeCol" style="width:70px"
                   label="&smaug.keyMan.keyType.label;"
                   flex="0"
                   class="sortDirectionIndicator"
                   onclick="sortTree(this)"
                   hidden="true"
                   persist="width ordinal hidden"/>
          <splitter class="tree-splitter"/>
          <treecol id="validityCol" style="width:70px"
                   label="&smaug.keyMan.calcTrust.label;"
                   flex="0"
                   class="sortDirectionIndicator"
                   onclick="sortTree(this)"
                   hidden="true"
                   persist="width ordinal hidden"/>
          <splitter class="tree-splitter"/>
          <treecol id="trustCol" style="width:70px"
                   label="&smaug.keyMan.ownerTrust.label;"
                   flex="0"
                   class="sortDirectionIndicator"
                   onclick="sortTree(this)"
                   hidden="true"
                   persist="width ordinal hidden"/>
          <splitter class="tree-splitter"/>
          <treecol id="expCol" style="width:70px"
                   label="&smaug.keyExpiry.label;"
                   flex="0"
                   class="sortDirectionIndicator"
                   onclick="sortTree(this)"
                   hidden="true"
                   persist="width ordinal hidden"/>
          <splitter class="tree-splitter"/>
          <treecol id="fprCol" style="width:70px"
                   label="&smaug.keyMan.fingerprint.label;"
                   flex="0"
                   class="sortDirectionIndicator"
                   onclick="sortTree(this)"
                   hidden="true"
                   persist="width ordinal hidden"/>
        </treecols>

        <treechildren id="pgpKeyListChildren" properties=""
                      context="ctxmenu"/>

      </tree>
    </hbox>
  </groupbox>

  <hbox id="statusLine">
    <label id="statusText" value=" "/>
    <progressmeter id="progressBar" mode="undetermined" value="0" collapsed="true"/>
    <description id="cancelBox" collapsed="true">
      <a class="smaugLink" href=""
         id="cancelButton" onclick="smgSendKeyCancel()">&smaug.keyMan.stopTransfer.label;</a>
    </description>
  </hbox>
</window>
